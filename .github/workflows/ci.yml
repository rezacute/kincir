name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features
      
      - name: Run tests
        run: cargo test --all-features --workspace

#  security-audit:
#    name: Security Audit
#    runs-on: ubuntu-latest
#    timeout-minutes: 15
#    steps:
#      - uses: actions/checkout@v4
#      - uses: dtolnay/rust-toolchain@stable
#      - uses: actions-rs/audit-check@v1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#
#  coverage:
#    name: Code Coverage
#    runs-on: ubuntu-latest
#    timeout-minutes: 30
#    steps:
#      - uses: actions/checkout@v4
#      - uses: dtolnay/rust-toolchain@stable
#        with:
#          components: llvm-tools-preview
#      - uses: Swatinem/rust-cache@v2
#      - uses: taiki-e/install-action@cargo-llvm-cov
#      
#      - name: Generate code coverage
#        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
#      
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          files: lcov.info
#          fail_ci_if_error: true
#
#  publish:
#    name: Publish to crates.io
#    needs: [test, security-audit, coverage]
#    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#    runs-on: ubuntu-latest
#    timeout-minutes: 15
#    steps:
#      - uses: actions/checkout@v4
#      - uses: dtolnay/rust-toolchain@stable
#      - uses: Swatinem/rust-cache@v2
#      
#      - name: Publish
#        env:
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
#        run: |
#          cd kincir
#          cargo publish --allow-dirty